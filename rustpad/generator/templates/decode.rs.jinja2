fn decode(event : Event) -> Option<WarthogThrottleEvent>{
    match event.event{
        EventType::ButtonPressed(_, code) => {
            match code.into_u32(){
                // note these values are calculated from underlying  (kind<<16 | hardware_code)
                {% for event in button_events %}
                {{event.pressed.encode(kind=1)}}u32 => {Some(WarthogThrottleEvent::{{event.pressed.name}})},
                {% endfor %}
                _ => {None}
            }
        }
        EventType::ButtonRepeated(_, code) => {
            unimplemented!()
        }
        EventType::ButtonReleased(_, code) => {
            match code.into_u32(){
                // note these values are calculated from underlying  (kind<<16 | hardware_code)
                {% for event in button_events %}
                {{event.pressed.encode(kind=1)}}u32 => {Some(WarthogThrottleEvent::{{event.released.name}})},
                {% endfor %}
                _ => {None}
            }
        }
        EventType::ButtonChanged(_, value, code) => {
                    unimplemented!()
        }
        EventType::AxisChanged(_, value, code) => {
            unimplemented!()
        }
        EventType::Connected => {
            None
        }
        EventType::Disconnected => {
            None
        }
        EventType::Dropped => {
            None
        }
    }
}
